//Контейнеры STL
//Задание 6: map и bitset


#include <iostream>
#include <string>
#include <map>
#include <iterator>

using namespace std;

//==============================================================
//map-контейнер содержащий пары ключ-значение,реализован как
//дерево, упорядочивание идет по значению кдюча
//==============================================================

int main()
{
	map<int, string> myMap;

	//добавление в контнейнер при помощи insert
	myMap.insert(make_pair(1, "Computer"));
	myMap.insert(pair<int, string>(2, "Mobile phone"));

	//добавление в контейнер при помощи emplace
	//возвращает true или false
	//и пару, которая в списке с данным ключом
	//если элемет с таким ключом уже есть, то значение не изменяется
	auto res1 = myMap.emplace(4, "Monitor");//самый короткий вариант добавлен в стандарте c++11
	auto res2 = myMap.emplace(2, "AirPods");

	//operator [] осуществляет поиск по ключу
	//возвращается значение хранящееся с данным ключом
	cout << myMap[1] << endl;
	//если ключ не найден то возвращается map.end();
	//оператор можно использовать для изменения значений связанных с ключом
	myMap[1] = "AirPods";
	//при таком использовании, если ключ не будет найден, то создается новый элемент
	myMap[30] = "Gamepad";//элемент с ключом 30 и значением "Gamepad"

	//Метод at 
	//работает аналогично методу [],но нельзя добавить надо элемент

	return 0;
}